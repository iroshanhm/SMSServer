/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package iroshan.com.common.derby.view;


import iroshan.com.common.derby.pojo.Setting_pojo;
import iroshan.com.common.derby.service.Setting_service;
import iroshan.com.common.utility.MyMessagesUtility;
import iroshan.com.common.utility.WindowLocation;
import iroshan.com.smsserver.view.ApplicationDesktop;

import java.util.Enumeration;
import javax.comm.CommPortIdentifier;


public class Setting extends javax.swing.JInternalFrame {

    /**
     * Creates new form SettingJIF
     */
    public Setting () {
        initComponents ();
        WindowLocation.setJinternalFrameToCenter (ApplicationDesktop.jDesktopPane, this);
        loadSetting ();
    }





    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings ("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cmbPortList = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        radioODBC = new javax.swing.JRadioButton();
        radioTCPIP = new javax.swing.JRadioButton();
        jSeparator1 = new javax.swing.JSeparator();
        lblODBCName = new javax.swing.JLabel();
        tfODBCName = new javax.swing.JTextField();
        tfIP = new javax.swing.JTextField();
        tfPort = new javax.swing.JTextField();
        tfDBName = new javax.swing.JTextField();
        tfDBUserName = new javax.swing.JTextField();
        tfDBPassword = new javax.swing.JPasswordField();
        lblDBPassword = new javax.swing.JLabel();
        lblDBUserName = new javax.swing.JLabel();
        lblDBName = new javax.swing.JLabel();
        lblPort = new javax.swing.JLabel();
        lblIP = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        cmbPortList_2 = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        setTitle("Setting");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/iroshan/com/smsserver/view/block-loading.gif"))); // NOI18N
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel3.setFont(new java.awt.Font("Segoe UI Symbol", 0, 18)); // NOI18N
        jLabel3.setText("Please Wait ... Port Finding.");

        jLabel2.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel2.setText("Port ID :");
        jLabel2.setVisible(false);

        cmbPortList.setFont(new java.awt.Font("Segoe UI Symbol", 0, 16)); // NOI18N
        cmbPortList.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 1, 0, new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel1.setText("DB Connection Type");

        radioODBC.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(radioODBC);
        radioODBC.setFont(new java.awt.Font("Segoe UI Symbol", 0, 14)); // NOI18N
        radioODBC.setText("ODBC");
        radioODBC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioODBCActionPerformed(evt);
            }
        });
        radioODBC.setVisible(false);

        radioTCPIP.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(radioTCPIP);
        radioTCPIP.setFont(new java.awt.Font("Segoe UI Symbol", 0, 14)); // NOI18N
        radioTCPIP.setSelected(true);
        radioTCPIP.setText("TCP/IP");
        radioTCPIP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioTCPIPActionPerformed(evt);
            }
        });

        lblODBCName.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        lblODBCName.setText("ODBC Name :");

        tfODBCName.setEditable(false);
        tfODBCName.setFont(new java.awt.Font("Segoe UI Symbol", 0, 14)); // NOI18N
        tfODBCName.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 1, 1, new java.awt.Color(0, 0, 0))));

        tfIP.setFont(new java.awt.Font("Segoe UI Symbol", 0, 14)); // NOI18N
        tfIP.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 1, 1, new java.awt.Color(0, 0, 0)));

        tfPort.setFont(new java.awt.Font("Segoe UI Symbol", 0, 14)); // NOI18N
        tfPort.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 1, 1, new java.awt.Color(0, 0, 0)));

        tfDBName.setFont(new java.awt.Font("Segoe UI Symbol", 0, 14)); // NOI18N
        tfDBName.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 1, 1, new java.awt.Color(0, 0, 0)));

        tfDBUserName.setFont(new java.awt.Font("Segoe UI Symbol", 0, 14)); // NOI18N
        tfDBUserName.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 1, 1, new java.awt.Color(0, 0, 0)));

        tfDBPassword.setFont(new java.awt.Font("Segoe UI Symbol", 0, 14)); // NOI18N
        tfDBPassword.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 1, 1, new java.awt.Color(0, 0, 0)));

        lblDBPassword.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        lblDBPassword.setText("DB Password :");

        lblDBUserName.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        lblDBUserName.setText("DB User Name :");

        lblDBName.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        lblDBName.setText("DB Name :");

        lblPort.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        lblPort.setText("Port :");

        lblIP.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        lblIP.setText("IP :");

        jButton3.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jButton3.setText("Save");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jButton1.setText("Close");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Refresh");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        cmbPortList_2.setVisible(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator2)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblDBUserName)
                            .addComponent(lblDBPassword)
                            .addComponent(lblDBName)
                            .addComponent(lblPort)
                            .addComponent(lblIP)
                            .addComponent(lblODBCName))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfODBCName)
                            .addComponent(tfIP)
                            .addComponent(tfPort)
                            .addComponent(tfDBName)
                            .addComponent(tfDBUserName)
                            .addComponent(tfDBPassword)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(radioTCPIP)
                        .addGap(18, 18, 18)
                        .addComponent(radioODBC)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(cmbPortList_2, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cmbPortList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 275, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbPortList)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                    .addComponent(cmbPortList_2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(radioODBC)
                    .addComponent(radioTCPIP))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblODBCName, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfODBCName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblIP, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfIP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPort, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDBName, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfDBName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDBUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfDBUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDBPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfDBPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        cmbPortList.setVisible(false);
        jButton2.setVisible(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void radioODBCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioODBCActionPerformed

        radioEvent ();
    }//GEN-LAST:event_radioODBCActionPerformed

    private void radioTCPIPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioTCPIPActionPerformed
        radioEvent ();
    }//GEN-LAST:event_radioTCPIPActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed



        boolean aFlag = true;

        String portID = null;
        String connectionType = null;
        String odbcName = null;
        String ip = null;
        String port = null;
        String dbName = null;
        String dbUserName = null;
        String dbPassword = null;

//        if (cmbPortList.getSelectedIndex () > 0) {
//            portID = cmbPortList.getSelectedItem ().toString ().trim ();
//        } else {
////            MyMessagesUtility.showWarning ("Select COM Port");
////            aFlag = false;
//        }

        if (!cmbPortList_2.getText().isEmpty()) {
            portID = cmbPortList_2.getText().trim();
        } else {
//            MyMessagesUtility.showWarning ("Select COM Port");
//            aFlag = false;
        }

        if (radioODBC.isSelected ()) {

            connectionType = Setting_pojo.ConTypeTCPIP.ODBC.toString ();

            odbcName = tfODBCName.getText ();

            if (odbcName.isEmpty ()) {
                MyMessagesUtility.showWarning ("Type ODBC Name");
                aFlag = false;
            }

        }

        if (radioTCPIP.isSelected ()) {

            connectionType = Setting_pojo.ConTypeTCPIP.TCPIP.toString ();

            ip = tfIP.getText ();
            if (ip.isEmpty ()) {
                MyMessagesUtility.showWarning ("Type IP");
                aFlag = false;
            }

            port = tfPort.getText ();
            if (port.isEmpty ()) {
                aFlag = false;
            }

            dbName = tfDBName.getText ();
            if (dbName.isEmpty ()) {
                MyMessagesUtility.showWarning ("Type Database Name");
                aFlag = false;
            }

            dbUserName = tfDBUserName.getText ();
            if (dbUserName.isEmpty ()) {
                MyMessagesUtility.showWarning ("Type Database Username");
                aFlag = false;
            }

            dbPassword = String.valueOf (tfDBPassword.getPassword ());
            if (dbPassword.isEmpty ()) {
                MyMessagesUtility.showWarning ("Type ODBC Password");
                aFlag = false;
            }
        }

        if (aFlag) {

            Setting_pojo.setComPortID (portID);
            Setting_pojo.setDbConnectionType (connectionType);
            Setting_pojo.setDbIP (ip);
            Setting_pojo.setDbODBCName (odbcName);
            Setting_pojo.setDbPort (port);
            Setting_pojo.setDbName (dbName);
            Setting_pojo.setDbUserName (dbUserName);
            Setting_pojo.setDbPassword (dbPassword);



            new Setting_service ().insertSetting ();
            new Setting_service ().loadSetting ();
        }



    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose ();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        radioODBC.doClick ();
        portList ();
        loadSetting ();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        radioODBC.doClick ();
        portList ();
        loadSetting ();
    }//GEN-LAST:event_formInternalFrameOpened


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox cmbPortList;
    private javax.swing.JTextField cmbPortList_2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lblDBName;
    private javax.swing.JLabel lblDBPassword;
    private javax.swing.JLabel lblDBUserName;
    private javax.swing.JLabel lblIP;
    private javax.swing.JLabel lblODBCName;
    private javax.swing.JLabel lblPort;
    private javax.swing.JRadioButton radioODBC;
    private javax.swing.JRadioButton radioTCPIP;
    private javax.swing.JTextField tfDBName;
    private javax.swing.JPasswordField tfDBPassword;
    private javax.swing.JTextField tfDBUserName;
    private javax.swing.JTextField tfIP;
    private javax.swing.JTextField tfODBCName;
    private javax.swing.JTextField tfPort;
    // End of variables declaration//GEN-END:variables





    void portList () {
        cmbPortList.removeAllItems ();
        cmbPortList.addItem ("Select");
        
        CommPortIdentifier portId = null;
        Enumeration<CommPortIdentifier> portList = CommPortIdentifier.getPortIdentifiers ();

        while (portList.hasMoreElements ()) {
            portId = portList.nextElement ();

            System.out.println ("All PortID : " + portId);

            if (portId.getPortType () == CommPortIdentifier.PORT_SERIAL) {
                cmbPortList.addItem (portId.getName ());
                System.out.println ("All PortID : " + portId);
            }
        }

        jLabel3.setText ("Set Your Setting Now.");
    }





    private void loadSetting () {

       

//            cmbPortList.setSelectedItem (Setting_pojo.getComPortID ());
            cmbPortList_2.setText(Setting_pojo.getComPortID ());

            if (Setting_pojo.getDbConnectionType ().equalsIgnoreCase (Setting_pojo.ConTypeTCPIP.ODBC.toString ())) {
                radioODBC.doClick ();
            }

            if (Setting_pojo.getDbConnectionType ().equalsIgnoreCase (Setting_pojo.ConTypeTCPIP.TCPIP.toString ())) {
                radioTCPIP.doClick ();
            }

            tfODBCName.setText (Setting_pojo.getDbODBCName ());
            tfIP.setText (Setting_pojo.getDbIP ());
            tfPort.setText (Setting_pojo.getDbPort ());
            tfDBName.setText (Setting_pojo.getDbName ());
            tfDBUserName.setText (Setting_pojo.getDbUserName ());
            tfDBPassword.setText (Setting_pojo.getDbPassword ());

        
    }





    private void radioEvent () {
        if (radioODBC.isSelected ()) {

            lblODBCName.setEnabled (true);
            tfODBCName.setEnabled (true);
            tfODBCName.setText ("");

            lblIP.setEnabled (false);
            tfIP.setEnabled (false);
            tfIP.setText ("");

            lblPort.setEnabled (false);
            tfPort.setEnabled (false);
            tfPort.setText ("");

            lblDBName.setEnabled (false);
            tfDBName.setEnabled (false);
            tfDBName.setText ("");

            lblDBUserName.setEnabled (false);
            tfDBUserName.setEnabled (false);
            tfDBUserName.setText ("");

            lblDBPassword.setEnabled (false);
            tfDBPassword.setEnabled (false);
            tfDBPassword.setText ("");

        } else if (radioTCPIP.isSelected ()) {

            lblODBCName.setEnabled (false);
            tfODBCName.setEnabled (false);
            tfODBCName.setText ("");

            lblIP.setEnabled (true);
            tfIP.setEnabled (true);
            tfIP.setText ("");

            lblPort.setEnabled (true);
            tfPort.setEnabled (true);
            tfPort.setText ("");

            lblDBName.setEnabled (true);
            tfDBName.setEnabled (true);
            tfDBName.setText ("");

            lblDBUserName.setEnabled (true);
            tfDBUserName.setEnabled (true);
            tfDBUserName.setText ("");

            lblDBPassword.setEnabled (true);
            tfDBPassword.setEnabled (true);
            tfDBPassword.setText ("");

        }
    }


}
